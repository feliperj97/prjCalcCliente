
package cliente;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Calculadora", targetNamespace = "http://control/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Calculadora {


    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns float
     */
    @WebMethod(operationName = "Substrair")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Substrair", targetNamespace = "http://control/", className = "cliente.Substrair")
    @ResponseWrapper(localName = "SubstrairResponse", targetNamespace = "http://control/", className = "cliente.SubstrairResponse")
    @Action(input = "http://control/Calculadora/SubstrairRequest", output = "http://control/Calculadora/SubstrairResponse")
    public float substrair(
        @WebParam(name = "a", targetNamespace = "")
        float a,
        @WebParam(name = "b", targetNamespace = "")
        float b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns float
     */
    @WebMethod(operationName = "Dividir")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Dividir", targetNamespace = "http://control/", className = "cliente.Dividir")
    @ResponseWrapper(localName = "DividirResponse", targetNamespace = "http://control/", className = "cliente.DividirResponse")
    @Action(input = "http://control/Calculadora/DividirRequest", output = "http://control/Calculadora/DividirResponse")
    public float dividir(
        @WebParam(name = "a", targetNamespace = "")
        float a,
        @WebParam(name = "b", targetNamespace = "")
        float b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns float
     */
    @WebMethod(operationName = "Somar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Somar", targetNamespace = "http://control/", className = "cliente.Somar")
    @ResponseWrapper(localName = "SomarResponse", targetNamespace = "http://control/", className = "cliente.SomarResponse")
    @Action(input = "http://control/Calculadora/SomarRequest", output = "http://control/Calculadora/SomarResponse")
    public float somar(
        @WebParam(name = "a", targetNamespace = "")
        float a,
        @WebParam(name = "b", targetNamespace = "")
        float b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns float
     */
    @WebMethod(operationName = "Multiplicar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Multiplicar", targetNamespace = "http://control/", className = "cliente.Multiplicar")
    @ResponseWrapper(localName = "MultiplicarResponse", targetNamespace = "http://control/", className = "cliente.MultiplicarResponse")
    @Action(input = "http://control/Calculadora/MultiplicarRequest", output = "http://control/Calculadora/MultiplicarResponse")
    public float multiplicar(
        @WebParam(name = "a", targetNamespace = "")
        float a,
        @WebParam(name = "b", targetNamespace = "")
        float b);

}
